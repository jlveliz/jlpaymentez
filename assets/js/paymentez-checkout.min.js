"use strict";
Array.prototype.forEach || (Array.prototype.forEach = function(fun) { if (void 0 === this || null === this || "function" != typeof fun) throw new TypeError; for (var t = Object(this), len = t.length >>> 0, thisArg = arguments.length >= 2 ? arguments[1] : void 0, i = 0; i < len; i++) i in t && fun.call(thisArg, t[i], i, t) }), Function.prototype.bind || (Function.prototype.bind = function(oThis) { if ("function" != typeof this) throw new TypeError("Function.prototype.bind - what is trying to be bound is not callable"); var aArgs = Array.prototype.slice.call(arguments, 1),
            fToBind = this,
            fNOP = function() {},
            fBound = function() { return fToBind.apply(this instanceof fNOP ? this : oThis, aArgs.concat(Array.prototype.slice.call(arguments))) }; return fNOP.prototype = this.prototype, fBound.prototype = new fNOP, fBound }), Array.prototype.forEach || (Array.prototype.forEach = function(callback, thisArg) { if (null === this) throw new TypeError(" this is null or not defined"); if ("function" != typeof callback) throw new TypeError(callback + " is not a function"); for (var O = Object(this), len = O.length >>> 0, k = 0; k < len; k++) k in O && callback.call(thisArg, O[k], k, O) }),
    function(undefined) {
        function addEventListener(obj, evt, func) { "addEventListener" in window ? obj.addEventListener(evt, func, !1) : "attachEvent" in window && obj.attachEvent("on" + evt, func) }

        function removeEventListener(el, evt, func) { "removeEventListener" in window ? el.removeEventListener(evt, func, !1) : "detachEvent" in window && el.detachEvent("on" + evt, func) }

        function setupRequestAnimationFrame() { var x, vendors = ["moz", "webkit", "o", "ms"]; for (x = 0; x < vendors.length && !requestAnimationFrame; x += 1) requestAnimationFrame = window[vendors[x] + "RequestAnimationFrame"];
            requestAnimationFrame || log("setup", "RequestAnimationFrame not supported") }

        function getMyID(iframeId) { var retStr = "Host page: " + iframeId; return window.top !== window.self && (retStr = window.parentIFrame && window.parentIFrame.getId ? window.parentIFrame.getId() + ": " + iframeId : "Nested host page: " + iframeId), retStr }

        function formatLogHeader(iframeId) { return msgId + "[" + getMyID(iframeId) + "]" }

        function isLogEnabled(iframeId) { return settings[iframeId] ? settings[iframeId].log : logEnabled }

        function log(iframeId, msg) { output("log", iframeId, msg, isLogEnabled(iframeId)) }

        function info(iframeId, msg) { output("info", iframeId, msg, isLogEnabled(iframeId)) }

        function warn(iframeId, msg) { output("warn", iframeId, msg, !0) }

        function output(type, iframeId, msg, enabled) {!0 === enabled && "object" == typeof window.console && console[type](formatLogHeader(iframeId), msg) }

        function iFrameListener(event) {
            function resizeIFrame() {
                function resize() { setSize(messageData), setPagePosition(iframeId), callback("resizedCallback", messageData) } ensureInRange("Height"), ensureInRange("Width"), syncResize(resize, messageData, "init") }

            function processMsg() { var data = msg.substr(msgIdLen).split(":"); return { iframe: settings[data[0]] && settings[data[0]].iframe, id: data[0], height: data[1], width: data[2], type: data[3] } }

            function ensureInRange(Dimension) { var max = Number(settings[iframeId]["max" + Dimension]),
                    min = Number(settings[iframeId]["min" + Dimension]),
                    dimension = Dimension.toLowerCase(),
                    size = Number(messageData[dimension]);
                log(iframeId, "Checking " + dimension + " is in range " + min + "-" + max), size < min && (size = min, log(iframeId, "Set " + dimension + " to min value")), size > max && (size = max, log(iframeId, "Set " + dimension + " to max value")), messageData[dimension] = "" + size }

            function isMessageFromIFrame() {
                function checkAllowedOrigin() {
                    function checkList() { var i = 0,
                            retCode = !1; for (log(iframeId, "Checking connection is from allowed list of origins: " + checkOrigin); i < checkOrigin.length; i++)
                            if (checkOrigin[i] === origin) { retCode = !0; break }
                        return retCode }

                    function checkSingle() { var remoteHost = settings[iframeId] && settings[iframeId].remoteHost; return log(iframeId, "Checking connection is from: " + remoteHost), origin === remoteHost } return checkOrigin.constructor === Array ? checkList() : checkSingle() } var origin = event.origin,
                    checkOrigin = settings[iframeId] && settings[iframeId].checkOrigin; if (checkOrigin && "" + origin != "null" && !checkAllowedOrigin()) throw new Error("Unexpected message received from: " + origin + " for " + messageData.iframe.id + ". Message was: " + event.data + ". This error can be disabled by setting the checkOrigin: false option or by providing of array of trusted domains."); return !0 }

            function isMessageForUs() { return msgId === ("" + msg).substr(0, msgIdLen) && msg.substr(msgIdLen).split(":")[0] in settings }

            function isMessageFromMetaParent() { var retCode = messageData.type in { true: 1, false: 1, undefined: 1 }; return retCode && log(iframeId, "Ignoring init message from meta parent page"), retCode }

            function getMsgBody(offset) { return msg.substr(msg.indexOf(":") + msgHeaderLen + offset) }

            function forwardMsgFromIFrame(msgBody) { log(iframeId, "MessageCallback passed: {iframe: " + messageData.iframe.id + ", message: " + msgBody + "}"), callback("messageCallback", { iframe: messageData.iframe, message: JSON.parse(msgBody) }), log(iframeId, "--") }

            function getPageInfo() { var bodyPosition = document.body.getBoundingClientRect(),
                    iFramePosition = messageData.iframe.getBoundingClientRect(); return JSON.stringify({ iframeHeight: iFramePosition.height, iframeWidth: iFramePosition.width, clientHeight: Math.max(document.documentElement.clientHeight, window.innerHeight || 0), clientWidth: Math.max(document.documentElement.clientWidth, window.innerWidth || 0), offsetTop: parseInt(iFramePosition.top - bodyPosition.top, 10), offsetLeft: parseInt(iFramePosition.left - bodyPosition.left, 10), scrollTop: window.pageYOffset, scrollLeft: window.pageXOffset }) }

            function sendPageInfoToIframe(iframe, iframeId) {
                function debouncedTrigger() { trigger("Send Page Info", "pageInfo:" + getPageInfo(), iframe, iframeId) } debouce(debouncedTrigger, 32) }

            function startPageInfoMonitor() {
                function setListener(type, func) {
                    function sendPageInfo() { settings[id] ? sendPageInfoToIframe(settings[id].iframe, id) : stop() }["scroll", "resize"].forEach(function(evt) { log(id, type + evt + " listener for sendPageInfo"), func(window, evt, sendPageInfo) }) }

                function stop() { setListener("Remove ", removeEventListener) }

                function start() { setListener("Add ", addEventListener) } var id = iframeId;
                start(), settings[id] && (settings[id].stopPageInfo = stop) }

            function stopPageInfoMonitor() { settings[iframeId] && settings[iframeId].stopPageInfo && (settings[iframeId].stopPageInfo(), delete settings[iframeId].stopPageInfo) }

            function checkIFrameExists() { var retBool = !0; return null === messageData.iframe && (warn(iframeId, "IFrame (" + messageData.id + ") not found"), retBool = !1), retBool }

            function getElementPosition(target) { var iFramePosition = target.getBoundingClientRect(); return getPagePosition(iframeId), { x: Math.floor(Number(iFramePosition.left) + Number(pagePosition.x)), y: Math.floor(Number(iFramePosition.top) + Number(pagePosition.y)) } }

            function scrollRequestFromChild(addOffset) {
                function reposition() { pagePosition = newPosition, scrollTo(), log(iframeId, "--") }

                function calcOffset() { return { x: Number(messageData.width) + offset.x, y: Number(messageData.height) + offset.y } }

                function scrollParent() { window.parentIFrame ? window.parentIFrame["scrollTo" + (addOffset ? "Offset" : "")](newPosition.x, newPosition.y) : warn(iframeId, "Unable to scroll to requested position, window.parentIFrame not found") } var offset = addOffset ? getElementPosition(messageData.iframe) : { x: 0, y: 0 },
                    newPosition = calcOffset();
                log(iframeId, "Reposition requested from iFrame (offset x:" + offset.x + " y:" + offset.y + ")"), window.top !== window.self ? scrollParent() : reposition() }

            function scrollTo() {!1 !== callback("scrollCallback", pagePosition) ? setPagePosition(iframeId) : unsetPagePosition() }

            function findTarget(location) {
                function jumpToTarget() { var jumpPosition = getElementPosition(target);
                    log(iframeId, "Moving to in page link (#" + hash + ") at x: " + jumpPosition.x + " y: " + jumpPosition.y), pagePosition = { x: jumpPosition.x, y: jumpPosition.y }, scrollTo(), log(iframeId, "--") }

                function jumpToParent() { window.parentIFrame ? window.parentIFrame.moveToAnchor(hash) : log(iframeId, "In page link #" + hash + " not found and window.parentIFrame not found") } var hash = location.split("#")[1] || "",
                    hashData = decodeURIComponent(hash),
                    target = document.getElementById(hashData) || document.getElementsByName(hashData)[0];
                target ? jumpToTarget() : window.top !== window.self ? jumpToParent() : log(iframeId, "In page link #" + hash + " not found") }

            function callback(funcName, val) { return chkCallback(iframeId, funcName, val) }

            function actionMsg() { switch (settings[iframeId] && settings[iframeId].firstRun && firstRun(), messageData.type) {
                    case "close":
                        settings[iframeId].closeRequestCallback ? chkCallback(iframeId, "closeRequestCallback", settings[iframeId].iframe) : closeIFrame(messageData.iframe); break;
                    case "message":
                        forwardMsgFromIFrame(getMsgBody(6)); break;
                    case "scrollTo":
                        scrollRequestFromChild(!1); break;
                    case "scrollToOffset":
                        scrollRequestFromChild(!0); break;
                    case "pageInfo":
                        sendPageInfoToIframe(settings[iframeId] && settings[iframeId].iframe, iframeId), startPageInfoMonitor(); break;
                    case "pageInfoStop":
                        stopPageInfoMonitor(); break;
                    case "inPageLink":
                        findTarget(getMsgBody(9)); break;
                    case "reset":
                        resetIFrame(messageData); break;
                    case "init":
                        resizeIFrame(), callback("initCallback", messageData.iframe); break;
                    default:
                        resizeIFrame() } }

            function hasSettings(iframeId) { var retBool = !0; return settings[iframeId] || (retBool = !1, warn(messageData.type + " No settings for " + iframeId + ". Message was: " + msg)), retBool }

            function iFrameReadyMsgReceived() { for (var iframeId in settings) trigger("iFrame requested init", createOutgoingMsg(iframeId), document.getElementById(iframeId), iframeId) }

            function firstRun() { settings[iframeId] && (settings[iframeId].firstRun = !1) } var msg = event.data,
                messageData = {},
                iframeId = null; "[iFrameResizerChild]Ready" === msg ? iFrameReadyMsgReceived() : isMessageForUs() ? (messageData = processMsg(), iframeId = logId = messageData.id, settings[iframeId] && (settings[iframeId].loaded = !0), !isMessageFromMetaParent() && hasSettings(iframeId) && (log(iframeId, "Received: " + msg), checkIFrameExists() && isMessageFromIFrame() && actionMsg())) : info(iframeId, "Ignored: " + msg) }

        function chkCallback(iframeId, funcName, val) { var func = null,
                retVal = null; if (settings[iframeId]) { if ("function" != typeof(func = settings[iframeId][funcName])) throw new TypeError(funcName + " on iFrame[" + iframeId + "] is not a function");
                retVal = func(val) } return retVal }

        function closeIFrame(iframe) { var iframeId = iframe.id;
            log(iframeId, "Removing iFrame: " + iframeId), iframe.parentNode && iframe.parentNode.removeChild(iframe), chkCallback(iframeId, "closedCallback", iframeId), log(iframeId, "--"), delete settings[iframeId] }

        function getPagePosition(iframeId) { null === pagePosition && (pagePosition = { x: window.pageXOffset !== undefined ? window.pageXOffset : document.documentElement.scrollLeft, y: window.pageYOffset !== undefined ? window.pageYOffset : document.documentElement.scrollTop }, log(iframeId, "Get page position: " + pagePosition.x + "," + pagePosition.y)) }

        function setPagePosition(iframeId) { null !== pagePosition && (window.scrollTo(pagePosition.x, pagePosition.y), log(iframeId, "Set page position: " + pagePosition.x + "," + pagePosition.y), unsetPagePosition()) }

        function unsetPagePosition() { pagePosition = null }

        function resetIFrame(messageData) {
            function reset() { setSize(messageData), trigger("reset", "reset", messageData.iframe, messageData.id) } log(messageData.id, "Size reset requested by " + ("init" === messageData.type ? "host page" : "iFrame")), getPagePosition(messageData.id), syncResize(reset, messageData, "reset") }

        function setSize(messageData) {
            function setDimension(dimension) { messageData.iframe.style[dimension] = messageData[dimension] + "px", log(messageData.id, "IFrame (" + iframeId + ") " + dimension + " set to " + messageData[dimension] + "px") }

            function chkZero(dimension) { hiddenCheckEnabled || "0" !== messageData[dimension] || (hiddenCheckEnabled = !0, log(iframeId, "Hidden iFrame detected, creating visibility listener"), fixHiddenIFrames()) }

            function processDimension(dimension) { setDimension(dimension), chkZero(dimension) } var iframeId = messageData.iframe.id;
            settings[iframeId] && (settings[iframeId].sizeHeight && processDimension("height"), settings[iframeId].sizeWidth && processDimension("width")) }

        function syncResize(func, messageData, doNotSync) { doNotSync !== messageData.type && requestAnimationFrame ? (log(messageData.id, "Requesting animation frame"), requestAnimationFrame(func)) : func() }

        function trigger(calleeMsg, msg, iframe, id, noResponseWarning) {
            function postMessageToIFrame() { var target = settings[id] && settings[id].targetOrigin;
                log(id, "[" + calleeMsg + "] Sending msg to iframe[" + id + "] (" + msg + ") targetOrigin: " + target), iframe.contentWindow.postMessage(msgId + msg, target) }

            function iFrameNotFound() { warn(id, "[" + calleeMsg + "] IFrame(" + id + ") not found") }

            function chkAndSend() { iframe && "contentWindow" in iframe && null !== iframe.contentWindow ? postMessageToIFrame() : iFrameNotFound() }

            function warnOnNoResponse() {
                function warning() {!settings[id] || settings[id].loaded || errorShown || (errorShown = !0, warn(id, "IFrame has not responded within " + settings[id].warningTimeout / 1e3 + " seconds. Check iFrameResizer.contentWindow.js has been loaded in iFrame. This message can be ingored if everything is working, or you can set the warningTimeout option to a higher value or zero to suppress this warning.")) } noResponseWarning && settings[id] && settings[id].warningTimeout && (settings[id].msgTimeout = setTimeout(warning, settings[id].warningTimeout)) } var errorShown = !1;
            id = id || iframe.id, settings[id] && (chkAndSend(), warnOnNoResponse()) }

        function createOutgoingMsg(iframeId) { return iframeId + ":" + settings[iframeId].bodyMarginV1 + ":" + settings[iframeId].sizeWidth + ":" + settings[iframeId].log + ":" + settings[iframeId].interval + ":" + settings[iframeId].enablePublicMethods + ":" + settings[iframeId].autoResize + ":" + settings[iframeId].bodyMargin + ":" + settings[iframeId].heightCalculationMethod + ":" + settings[iframeId].bodyBackground + ":" + settings[iframeId].bodyPadding + ":" + settings[iframeId].tolerance + ":" + settings[iframeId].inPageLinks + ":" + settings[iframeId].resizeFrom + ":" + settings[iframeId].widthCalculationMethod }

        function setupIFrame(iframe, options) {
            function setLimits() {
                function addStyle(style) { 1 / 0 !== settings[iframeId][style] && 0 !== settings[iframeId][style] && (iframe.style[style] = settings[iframeId][style] + "px", log(iframeId, "Set " + style + " = " + settings[iframeId][style] + "px")) }

                function chkMinMax(dimension) { if (settings[iframeId]["min" + dimension] > settings[iframeId]["max" + dimension]) throw new Error("Value for min" + dimension + " can not be greater than max" + dimension) } chkMinMax("Height"), chkMinMax("Width"), addStyle("maxHeight"), addStyle("minHeight"), addStyle("maxWidth"), addStyle("minWidth") }

            function newId() { var id = options && options.id || defaults.id + count++; return null !== document.getElementById(id) && (id += count++), id }

            function ensureHasId(iframeId) { return logId = iframeId, "" === iframeId && (iframe.id = iframeId = newId(), logEnabled = (options || {}).log, logId = iframeId, log(iframeId, "Added missing iframe ID: " + iframeId + " (" + iframe.src + ")")), iframeId }

            function setScrolling() { switch (log(iframeId, "IFrame scrolling " + (settings[iframeId] && settings[iframeId].scrolling ? "enabled" : "disabled") + " for " + iframeId), iframe.style.overflow = !1 === (settings[iframeId] && settings[iframeId].scrolling) ? "hidden" : "auto", settings[iframeId] && settings[iframeId].scrolling) {
                    case !0:
                        iframe.scrolling = "yes"; break;
                    case !1:
                        iframe.scrolling = "no"; break;
                    default:
                        iframe.scrolling = settings[iframeId] ? settings[iframeId].scrolling : "no" } }

            function setupBodyMarginValues() { "number" != typeof(settings[iframeId] && settings[iframeId].bodyMargin) && "0" !== (settings[iframeId] && settings[iframeId].bodyMargin) || (settings[iframeId].bodyMarginV1 = settings[iframeId].bodyMargin, settings[iframeId].bodyMargin = settings[iframeId].bodyMargin + "px") }

            function checkReset() { var firstRun = settings[iframeId] && settings[iframeId].firstRun,
                    resetRequertMethod = settings[iframeId] && settings[iframeId].heightCalculationMethod in resetRequiredMethods;!firstRun && resetRequertMethod && resetIFrame({ iframe: iframe, height: 0, width: 0, type: "init" }) }

            function setupIFrameObject() { Function.prototype.bind && settings[iframeId] && (settings[iframeId].iframe.iFrameResizer = { close: closeIFrame.bind(null, settings[iframeId].iframe), resize: trigger.bind(null, "Window resize", "resize", settings[iframeId].iframe), moveToAnchor: function(anchor) { trigger("Move to anchor", "moveToAnchor:" + anchor, settings[iframeId].iframe, iframeId) }, sendMessage: function(message) { message = JSON.stringify(message), trigger("Send Message", "message:" + message, settings[iframeId].iframe, iframeId) } }) }

            function init(msg) {
                function iFrameLoaded() { trigger("iFrame.onload", msg, iframe, undefined, !0), checkReset() } addEventListener(iframe, "load", iFrameLoaded), trigger("init", msg, iframe, undefined, !0) }

            function checkOptions(options) { if ("object" != typeof options) throw new TypeError("Options is not an object") }

            function copyOptions(options) { for (var option in defaults) defaults.hasOwnProperty(option) && (settings[iframeId][option] = options.hasOwnProperty(option) ? options[option] : defaults[option]) }

            function getTargetOrigin(remoteHost) { return "" === remoteHost || "file://" === remoteHost ? "*" : remoteHost }

            function processOptions(options) { options = options || {}, settings[iframeId] = { firstRun: !0, iframe: iframe, remoteHost: iframe.src.split("/").slice(0, 3).join("/") }, checkOptions(options), copyOptions(options), settings[iframeId] && (settings[iframeId].targetOrigin = !0 === settings[iframeId].checkOrigin ? getTargetOrigin(settings[iframeId].remoteHost) : "*") }

            function beenHere() { return iframeId in settings && "iFrameResizer" in iframe } var iframeId = ensureHasId(iframe.id);
            beenHere() ? warn(iframeId, "Ignored iFrame, already setup.") : (processOptions(options), setScrolling(), setLimits(), setupBodyMarginValues(), init(createOutgoingMsg(iframeId)), setupIFrameObject()) }

        function debouce(fn, time) { null === timer && (timer = setTimeout(function() { timer = null, fn() }, time)) }

        function fixHiddenIFrames() {
            function checkIFrames() {
                function checkIFrame(settingId) {
                    function chkDimension(dimension) { return "0px" === (settings[settingId] && settings[settingId].iframe.style[dimension]) }

                    function isVisible(el) { return null !== el.offsetParent } settings[settingId] && isVisible(settings[settingId].iframe) && (chkDimension("height") || chkDimension("width")) && trigger("Visibility change", "resize", settings[settingId].iframe, settingId) } for (var settingId in settings) checkIFrame(settingId) }

            function mutationObserved(mutations) { log("window", "Mutation observed: " + mutations[0].target + " " + mutations[0].type), debouce(checkIFrames, 16) }

            function createMutationObserver() { var target = document.querySelector("body"),
                    config = { attributes: !0, attributeOldValue: !1, characterData: !0, characterDataOldValue: !1, childList: !0, subtree: !0 };
                new MutationObserver(mutationObserved).observe(target, config) } var MutationObserver = window.MutationObserver || window.WebKitMutationObserver;
            MutationObserver && createMutationObserver() }

        function resizeIFrames(event) {
            function resize() { sendTriggerMsg("Window " + event, "resize") } log("window", "Trigger event: " + event), debouce(resize, 16) }

        function tabVisible() {
            function resize() { sendTriggerMsg("Tab Visable", "resize") } "hidden" !== document.visibilityState && (log("document", "Trigger event: Visiblity change"), debouce(resize, 16)) }

        function sendTriggerMsg(eventName, event) {
            function isIFrameResizeEnabled(iframeId) { return settings[iframeId] && "parent" === settings[iframeId].resizeFrom && settings[iframeId].autoResize && !settings[iframeId].firstRun } for (var iframeId in settings) isIFrameResizeEnabled(iframeId) && trigger(eventName, event, document.getElementById(iframeId), iframeId) }

        function setupEventListeners() { addEventListener(window, "message", iFrameListener), addEventListener(window, "resize", function() { resizeIFrames("resize") }), addEventListener(document, "visibilitychange", tabVisible), addEventListener(document, "-webkit-visibilitychange", tabVisible), addEventListener(window, "focusin", function() { resizeIFrames("focus") }), addEventListener(window, "focus", function() { resizeIFrames("focus") }) }

        function factory() {
            function init(options, element) {
                function chkType() { if (!element.tagName) throw new TypeError("Object is not a valid DOM element"); if ("IFRAME" !== element.tagName.toUpperCase()) throw new TypeError("Expected <IFRAME> tag, found <" + element.tagName + ">") } element && (chkType(), setupIFrame(element, options), iFrames.push(element)) }

            function warnDeprecatedOptions(options) { options && options.enablePublicMethods && warn("enablePublicMethods option has been removed, public methods are now always available in the iFrame") } var iFrames; return setupRequestAnimationFrame(), setupEventListeners(),
                function(options, target) { switch (iFrames = [], warnDeprecatedOptions(options), typeof target) {
                        case "undefined":
                        case "string":
                            Array.prototype.forEach.call(document.querySelectorAll(target || "iframe"), init.bind(undefined, options)); break;
                        case "object":
                            init(options, target); break;
                        default:
                            throw new TypeError("Unexpected data type (" + typeof target + ")") } return iFrames } }

        function createJQueryPublicMethod($) { $.fn ? $.fn.iFrameResize || ($.fn.iFrameResize = function(options) {
                function init(index, element) { setupIFrame(element, options) } return this.filter("iframe").each(init).end() }) : info("", "Unable to bind to jQuery, it is not fully loaded.") } if ("undefined" != typeof window) { var count = 0,
                logEnabled = !1,
                hiddenCheckEnabled = !1,
                msgHeader = "message",
                msgHeaderLen = msgHeader.length,
                msgId = "[iFrameSizer]",
                msgIdLen = msgId.length,
                pagePosition = null,
                requestAnimationFrame = window.requestAnimationFrame,
                resetRequiredMethods = { max: 1, scroll: 1, bodyScroll: 1, documentElementScroll: 1 },
                settings = {},
                timer = null,
                logId = "Host Page",
                defaults = { autoResize: !0, bodyBackground: null, bodyMargin: null, bodyMarginV1: 8, bodyPadding: null, checkOrigin: !0, inPageLinks: !1, enablePublicMethods: !0, heightCalculationMethod: "bodyOffset", id: "iFrameResizer", interval: 32, log: !1, maxHeight: 1 / 0, maxWidth: 1 / 0, minHeight: 0, minWidth: 0, resizeFrom: "parent", scrolling: !1, sizeHeight: !0, sizeWidth: !1, warningTimeout: 5e3, tolerance: 0, widthCalculationMethod: "scroll", closedCallback: function() {}, initCallback: function() {}, messageCallback: function() { warn("MessageCallback function not defined") }, resizedCallback: function() {}, scrollCallback: function() { return !0 } };
            window.jQuery && createJQueryPublicMethod(window.jQuery), "function" == typeof define && define.amd ? define([], factory) : "object" == typeof module && "object" == typeof module.exports ? module.exports = factory() : window.iFrameResize = window.iFrameResize || factory() } }(),
    function(root, factory) { var cssId = "paymentezCheckoutCss"; if (!document.getElementById(cssId)) { var head = document.getElementsByTagName("head")[0],
                link = document.createElement("link");
            link.id = cssId, link.rel = "stylesheet", link.type = "text/css", link.href = "https://cdn.paymentez.com/checkout/1.0.1/paymentez-checkout.min.css", link.media = "all", head.appendChild(link) } "function" == typeof define && define.amd ? define(factory) : "object" == typeof exports ? module.exports = factory() : root.PaymentezCheckout = factory() }(this, function() {
        function Modal(options) { var defaults = { client_app_code: null, client_app_key: null, env_mode: null, locale: "en", onClose: null, onOpen: null, onResponse: null, beforeOpen: null, beforeClose: null, stickyFooter: !1, footer: !1, cssClass: [], closeLabel: "", loadingLabel: "", errorLabel: "", closeMethods: ["overlay", "button", "escape"] };
            this.opts = extend({}, defaults, options), this.SERVER_LOCAL_URL = "http://localhost:8000", this.SERVER_DEV_URL = "https://ccapi-dev.paymentez.com", this.SERVER_STG_URL = "https://ccapi-stg.paymentez.com", this.SERVER_PROD_URL = "https://ccapi.paymentez.com", this.init() }

        function _getUniqToken(auth_timestamp, paymentez_client_app_key) { return _getHash(paymentez_client_app_key + auth_timestamp) }

        function _getAuthToken(paymentez_client_app_code, app_client_key) { var d = new Date,
                n = d.getTime(),
                auth_timestamp = "" + n,
                string_auth_token = paymentez_client_app_code + ";" + auth_timestamp + ";" + _getUniqToken(auth_timestamp, app_client_key); return btoa(string_auth_token) }

        function _getHash(message) { var sha256 = new jsSHA("SHA-256", "TEXT"); return sha256.update(message), sha256.getHash("HEX") }

        function _initCheckout(initCheckoutRequest, successCallback, erroCallback) { var SERVER_URL = this.SERVER_STG_URL;
            SERVER_URL = "dev" === this.opts.env_mode ? this.SERVER_DEV_URL : "stg" === this.opts.env_mode ? this.SERVER_STG_URL : "prod" === this.opts.env_mode ? this.SERVER_PROD_URL : this.SERVER_LOCAL_URL; var xmlhttp = new XMLHttpRequest;
            xmlhttp.open("POST", SERVER_URL + "/v2/transaction/init_checkout", !0), xmlhttp.setRequestHeader("Content-Type", "application/json"), xmlhttp.setRequestHeader("Auth-Token", _getAuthToken(this.opts.client_app_code, this.opts.client_app_key)), xmlhttp.onreadystatechange = function() { if (xmlhttp.readyState == XMLHttpRequest.DONE) try { var objResponse = JSON.parse(xmlhttp.responseText);
                    200 == xmlhttp.status ? successCallback(objResponse) : erroCallback(400 == xmlhttp.status ? objResponse : objResponse) } catch (e) { var server_error = { error: { type: "Server Error", help: "Please Try Again Later", description: "Something Went Wrong" } };
                    erroCallback(server_error) } }, xmlhttp.send(JSON.stringify(initCheckoutRequest)) }

        function _recalculateFooterPosition() { this.modalBoxFooter && (this.modalBoxFooter.style.width = this.modalBox.clientWidth + "px", this.modalBoxFooter.style.left = this.modalBox.offsetLeft + "px") }

        function _build() { this.modal = document.createElement("div"), this.modal.classList.add("paymentez-checkout-modal"), 0 !== this.opts.closeMethods.length && -1 !== this.opts.closeMethods.indexOf("overlay") || this.modal.classList.add("paymentez-checkout-modal--noOverlayClose"), this.modal.style.display = "none", this.opts.cssClass.forEach(function(item) { "string" == typeof item && this.modal.classList.add(item) }, this), -1 !== this.opts.closeMethods.indexOf("button") && (this.modalCloseBtn = document.createElement("button"), this.modalCloseBtn.classList.add("paymentez-checkout-modal__close"), this.modalCloseBtnIcon = document.createElement("span"), this.modalCloseBtnIcon.classList.add("paymentez-checkout-modal__closeIcon"), this.modalCloseBtnIcon.innerHTML = "×", this.modalCloseBtnLabel = document.createElement("span"), this.modalCloseBtnLabel.classList.add("paymentez-checkout-modal__closeLabel"), this.modalCloseBtnLabel.innerHTML = this.opts.closeLabel, this.modalCloseBtn.appendChild(this.modalCloseBtnIcon), this.modalCloseBtn.appendChild(this.modalCloseBtnLabel)), this.modalBox = document.createElement("div"), this.modalBox.classList.add("paymentez-checkout-modal-box"), this.modalBoxContent = document.createElement("div"), this.modalBoxContent.classList.add("paymentez-checkout-modal-box__content"), this.modalBox.appendChild(this.modalBoxContent), -1 !== this.opts.closeMethods.indexOf("button") && this.modal.appendChild(this.modalCloseBtn), this.modal.appendChild(this.modalBox) }

        function _buildFooter() { this.modalBoxFooter = document.createElement("div"), this.modalBoxFooter.classList.add("paymentez-checkout-modal-box__footer"), this.modalBox.appendChild(this.modalBoxFooter) }

        function _bindEvents() { this._events = { clickCloseBtn: this.close.bind(this), clickOverlay: _handleClickOutside.bind(this), resize: this.checkOverflow.bind(this), keyboardNav: _handleKeyboardNav.bind(this) }, -1 !== this.opts.closeMethods.indexOf("button") && this.modalCloseBtn.addEventListener("click", this._events.clickCloseBtn), this.modal.addEventListener("mousedown", this._events.clickOverlay), window.addEventListener("resize", this._events.resize), document.addEventListener("keydown", this._events.keyboardNav) }

        function _handleKeyboardNav(event) {-1 !== this.opts.closeMethods.indexOf("escape") && 27 === event.which && this.isOpen() && this.close() }

        function _handleClickOutside(event) {-1 !== this.opts.closeMethods.indexOf("overlay") && !_findAncestor(event.target, "paymentez-checkout-modal") && event.clientX < this.modal.clientWidth && this.close() }

        function _findAncestor(el, cls) { for (;
                (el = el.parentElement) && !el.classList.contains(cls);); return el }

        function _unbindEvents() {-1 !== this.opts.closeMethods.indexOf("button") && this.modalCloseBtn.removeEventListener("click", this._events.clickCloseBtn), this.modal.removeEventListener("mousedown", this._events.clickOverlay), window.removeEventListener("resize", this._events.resize), document.removeEventListener("keydown", this._events.keyboardNav) }

        function extend() { for (var i = 1; i < arguments.length; i++)
                for (var key in arguments[i]) arguments[i].hasOwnProperty(key) && (arguments[0][key] = arguments[i][key]); return arguments[0] }

        function whichTransitionEvent() { var t, el = document.createElement("paymentez-checkout-test-transition"),
                transitions = { transition: "transitionend", OTransition: "oTransitionEnd", MozTransition: "transitionend", WebkitTransition: "webkitTransitionEnd" }; for (t in transitions)
                if (void 0 !== el.style[t]) return transitions[t] } var transitionEvent = whichTransitionEvent(); return Modal.prototype.init = function() { var self = this;
            this.modal || ("pt" === self.opts.locale ? (self.opts.closeLabel = "Fechar", self.opts.loadingLabel = "Carregando...", self.opts.errorLabel = "Desculpe, houve um problema ao carregar o Checkout: ") : "es" === self.opts.locale ? (self.opts.closeLabel = "Cerrar", self.opts.loadingLabel = "Cargando...", self.opts.errorLabel = "Disculpe, se produjo un problema cargando el Checkout: ") : (self.opts.closeLabel = "Close", self.opts.loadingLabel = "Loading...", self.opts.errorLabel = "Sorry, there was a problem loading Checkout: "), _build.call(this), _bindEvents.call(this), document.body.insertBefore(this.modal, document.body.firstChild), this.opts.footer && this.addFooter()) }, Modal.prototype.destroy = function() { null !== this.modal && (_unbindEvents.call(this), this.modal.parentNode.removeChild(this.modal), this.modal = null) }, Modal.prototype.open = function(orderRequest) { var self = this; "function" == typeof self.opts.beforeOpen && self.opts.beforeOpen(), this.modal.style.removeProperty ? this.modal.style.removeProperty("display") : this.modal.style.removeAttribute("display"), document.body.classList.add("paymentez-checkout-enabled"), this.setStickyFooter(this.opts.stickyFooter), this.modal.classList.add("paymentez-checkout-modal--visible"), this.modalBoxContent.innerHTML = '<div class="paymentez_dialog_info"><i class="fa fa-times-circle"></i><span>' + self.opts.loadingLabel + "</span></div>"; var installments_type = 0;
            orderRequest.order_installments_type && (installments_type = orderRequest.order_installments_type); var taxable_amount = 0;
            orderRequest.order_taxable_amount && (taxable_amount = orderRequest.order_taxable_amount); var tax_percentage = 0;
            orderRequest.order_tax_percentage && (tax_percentage = orderRequest.order_tax_percentage); var params = { locale: self.opts.locale, user: { id: orderRequest.user_id, email: orderRequest.user_email, phone: orderRequest.user_phone }, order: { amount: orderRequest.order_amount, description: orderRequest.order_description, vat: orderRequest.order_vat, dev_reference: orderRequest.order_reference, installments_type: installments_type, taxable_amount: taxable_amount, tax_percentage: tax_percentage } };
            _initCheckout.call(this, params, function(checkout_response) { self.openModal(checkout_response.checkout_url) }, function(error_response) { self.modalBoxContent.innerHTML = '<div class="paymentez_dialog_error"><i class="fa fa-times-circle"></i><span>' + self.opts.errorLabel + error_response.error.type + "</span></div>" }), transitionEvent ? this.modal.addEventListener(transitionEvent, function handler() { "function" == typeof self.opts.onOpen && self.opts.onOpen.call(self), self.modal.removeEventListener(transitionEvent, handler, !1) }, !1) : "function" == typeof self.opts.onOpen && self.opts.onOpen.call(self), this.checkOverflow() }, Modal.prototype.openModal = function(iframe_url) { var self = this;
            this.modalBoxContent.innerHTML = ""; var content = document.createElement("iframe");
            content.setAttribute("id", "modalBoxContentPaymentezCheckout"), content.setAttribute("scrolling", "no"), content.setAttribute("width", "100%"), content.setAttribute("frameBorder", "0"), content.setAttribute("padding", "0"), content.setAttribute("margin", "0"), content.setAttribute("src", iframe_url), this.modalBoxContent.appendChild(content), this.checkOverflow(), iFrameResize({ log: !1, checkOrigin: !1, messageCallback: function(messageData) { "function" == typeof self.opts.onResponse && (self.opts.onResponse.call(this, messageData.message), self.close()) } }, "#modalBoxContentPaymentezCheckout") }, Modal.prototype.isOpen = function() { return !!this.modal.classList.contains("paymentez-checkout-modal--visible") }, Modal.prototype.close = function() { if ("function" == typeof this.opts.beforeClose) { if (!this.opts.beforeClose.call(this)) return } document.body.classList.remove("paymentez-checkout-enabled"), this.modal.classList.remove("paymentez-checkout-modal--visible"); var self = this;
            transitionEvent ? this.modal.addEventListener(transitionEvent, function handler() { self.modal.removeEventListener(transitionEvent, handler, !1), self.modal.style.display = "none", "function" == typeof self.opts.onClose && self.opts.onClose.call(this) }, !1) : (self.modal.style.display = "none", "function" == typeof self.opts.onClose && self.opts.onClose.call(this)) }, Modal.prototype.setContent = function(content) {}, Modal.prototype.getContent = function() { return this.modalBoxContent }, Modal.prototype.addFooter = function() { _buildFooter.call(this) }, Modal.prototype.setFooterContent = function(content) { this.modalBoxFooter.innerHTML = content }, Modal.prototype.getFooterContent = function() { return this.modalBoxFooter }, Modal.prototype.setStickyFooter = function(isSticky) { this.isOverflow() || (isSticky = !1), isSticky ? this.modalBox.contains(this.modalBoxFooter) && (this.modalBox.removeChild(this.modalBoxFooter), this.modal.appendChild(this.modalBoxFooter), this.modalBoxFooter.classList.add("paymentez-checkout-modal-box__footer--sticky"), _recalculateFooterPosition.call(this), this.modalBoxContent.style["padding-bottom"] = this.modalBoxFooter.clientHeight + 20 + "px") : this.modalBoxFooter && (this.modalBox.contains(this.modalBoxFooter) || (this.modal.removeChild(this.modalBoxFooter), this.modalBox.appendChild(this.modalBoxFooter), this.modalBoxFooter.style.width = "auto", this.modalBoxFooter.style.left = "", this.modalBoxContent.style["padding-bottom"] = "", this.modalBoxFooter.classList.remove("paymentez-checkout-modal-box__footer--sticky"))) }, Modal.prototype.addFooterBtn = function(label, cssClass, callback) { var btn = document.createElement("button"); return btn.innerHTML = label, btn.addEventListener("click", callback), "string" == typeof cssClass && cssClass.length && cssClass.split(" ").forEach(function(item) { btn.classList.add(item) }), this.modalBoxFooter.appendChild(btn), btn }, Modal.prototype.resize = function() { console.warn("Resize is deprecated and will be removed in version 1.0") }, Modal.prototype.isOverflow = function() { var viewportHeight = window.innerHeight; return this.modalBox.clientHeight >= viewportHeight }, Modal.prototype.checkOverflow = function() { this.modal.classList.contains("paymentez-checkout-modal--visible") && (this.isOverflow() ? this.modal.classList.add("paymentez-checkout-modal--overflow") : this.modal.classList.remove("paymentez-checkout-modal--overflow"), !this.isOverflow() && this.opts.stickyFooter ? this.setStickyFooter(!1) : this.isOverflow() && this.opts.stickyFooter && (_recalculateFooterPosition.call(this), this.setStickyFooter(!0))) }, { modal: Modal } }),
    function(I) {
        function w(c, a, d) { var f, n, k, e, h, q, y, p, u, l = 0,
                b = [],
                g = 0,
                m = !1,
                t = [],
                r = [],
                z = !1; if (d = d || {}, f = d.encoding || "UTF8", (u = d.numRounds || 1) !== parseInt(u, 10) || 1 > u) throw Error("numRounds must a integer >= 1"); if (0 !== c.lastIndexOf("SHA-", 0)) throw Error("Chosen SHA variant is not supported"); if (q = function(b, a) { return A(b, a, c) }, y = function(b, a, l, f) { var g, e; if ("SHA-224" !== c && "SHA-256" !== c) throw Error("Unexpected error in SHA-2 implementation"); for (g = 15 + (a + 65 >>> 9 << 4), e = 16; b.length <= g;) b.push(0); for (b[a >>> 5] |= 128 << 24 - a % 32, a += l, b[g] = 4294967295 & a, b[g - 1] = a / 4294967296 | 0, l = b.length, a = 0; a < l; a += e) f = A(b.slice(a, a + e), f, c); if ("SHA-224" === c) b = [f[0], f[1], f[2], f[3], f[4], f[5], f[6]];
                    else { if ("SHA-256" !== c) throw Error("Unexpected error in SHA-2 implementation");
                        b = f } return b }, p = function(b) { return b.slice() }, "SHA-224" === c) h = 512, e = 224;
            else { if ("SHA-256" !== c) throw Error("Chosen SHA variant is not supported");
                h = 512, e = 256 } k = B(a, f), n = x(c), this.setHMACKey = function(b, a, g) { var e; if (!0 === m) throw Error("HMAC key already set"); if (!0 === z) throw Error("Cannot set HMAC key after calling update"); if (f = (g || {}).encoding || "UTF8", a = B(a, f)(b), b = a.binLen, a = a.value, e = h >>> 3, g = e / 4 - 1, e < b / 8) { for (a = y(a, b, 0, x(c)); a.length <= g;) a.push(0);
                    a[g] &= 4294967040 } else if (e > b / 8) { for (; a.length <= g;) a.push(0);
                    a[g] &= 4294967040 } for (b = 0; b <= g; b += 1) t[b] = 909522486 ^ a[b], r[b] = 1549556828 ^ a[b];
                n = q(t, n), l = h, m = !0 }, this.update = function(a) { var c, f, e, d = 0,
                    p = h >>> 5; for (c = k(a, b, g), a = c.binLen, f = c.value, c = a >>> 5, e = 0; e < c; e += p) d + h <= a && (n = q(f.slice(e, e + p), n), d += h);
                l += d, b = f.slice(d >>> 5), g = a % h, z = !0 }, this.getHash = function(a, f) { var d, h, k, q; if (!0 === m) throw Error("Cannot call getHash after setting HMAC key"); switch (k = C(f), a) {
                    case "HEX":
                        d = function(a) { return D(a, e, k) }; break;
                    case "B64":
                        d = function(a) { return E(a, e, k) }; break;
                    case "BYTES":
                        d = function(a) { return F(a, e) }; break;
                    case "ARRAYBUFFER":
                        try { h = new ArrayBuffer(0) } catch (v) { throw Error("ARRAYBUFFER not supported by this environment") } d = function(a) { return G(a, e) }; break;
                    default:
                        throw Error("format must be HEX, B64, BYTES, or ARRAYBUFFER") } for (q = y(b.slice(), g, l, p(n)), h = 1; h < u; h += 1) q = y(q, e, 0, x(c)); return d(q) }, this.getHMAC = function(a, f) { var d, k, t, u; if (!1 === m) throw Error("Cannot call getHMAC without first setting HMAC key"); switch (t = C(f), a) {
                    case "HEX":
                        d = function(a) { return D(a, e, t) }; break;
                    case "B64":
                        d = function(a) { return E(a, e, t) }; break;
                    case "BYTES":
                        d = function(a) { return F(a, e) }; break;
                    case "ARRAYBUFFER":
                        try { d = new ArrayBuffer(0) } catch (v) { throw Error("ARRAYBUFFER not supported by this environment") } d = function(a) { return G(a, e) }; break;
                    default:
                        throw Error("outputFormat must be HEX, B64, BYTES, or ARRAYBUFFER") } return k = y(b.slice(), g, l, p(n)), u = q(r, x(c)), u = y(k, e, h, u), d(u) } }

        function m() {}

        function D(c, a, d) { var l = "";
            a /= 8; var b, g; for (b = 0; b < a; b += 1) g = c[b >>> 2] >>> 8 * (3 + b % 4 * -1), l += "0123456789abcdef".charAt(g >>> 4 & 15) + "0123456789abcdef".charAt(15 & g); return d.outputUpper ? l.toUpperCase() : l }

        function E(c, a, d) { var g, f, n, l = "",
                b = a / 8; for (g = 0; g < b; g += 3)
                for (f = g + 1 < b ? c[g + 1 >>> 2] : 0, n = g + 2 < b ? c[g + 2 >>> 2] : 0, n = (c[g >>> 2] >>> 8 * (3 + g % 4 * -1) & 255) << 16 | (f >>> 8 * (3 + (g + 1) % 4 * -1) & 255) << 8 | n >>> 8 * (3 + (g + 2) % 4 * -1) & 255, f = 0; 4 > f; f += 1) l += 8 * g + 6 * f <= a ? "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/".charAt(n >>> 6 * (3 - f) & 63) : d.b64Pad; return l }

        function F(c, a) { var b, g, d = "",
                l = a / 8; for (b = 0; b < l; b += 1) g = c[b >>> 2] >>> 8 * (3 + b % 4 * -1) & 255, d += String.fromCharCode(g); return d }

        function G(c, a) { var l, g, d = a / 8,
                b = new ArrayBuffer(d); for (g = new Uint8Array(b), l = 0; l < d; l += 1) g[l] = c[l >>> 2] >>> 8 * (3 + l % 4 * -1) & 255; return b }

        function C(c) { var a = { outputUpper: !1, b64Pad: "=", shakeLen: -1 }; if (c = c || {}, a.outputUpper = c.outputUpper || !1, !0 === c.hasOwnProperty("b64Pad") && (a.b64Pad = c.b64Pad), "boolean" != typeof a.outputUpper) throw Error("Invalid outputUpper formatting option"); if ("string" != typeof a.b64Pad) throw Error("Invalid b64Pad formatting option"); return a }

        function B(c, a) { var d; switch (a) {
                case "UTF8":
                case "UTF16BE":
                case "UTF16LE":
                    break;
                default:
                    throw Error("encoding must be UTF8, UTF16BE, or UTF16LE") } switch (c) {
                case "HEX":
                    d = function(a, b, c) { var d, k, e, h, q, f = a.length; if (0 != f % 2) throw Error("String of HEX type must be in byte increments"); for (b = b || [0], c = c || 0, q = c >>> 3, d = 0; d < f; d += 2) { if (k = parseInt(a.substr(d, 2), 16), isNaN(k)) throw Error("String of HEX type contains invalid characters"); for (h = (d >>> 1) + q, e = h >>> 2; b.length <= e;) b.push(0);
                            b[e] |= k << 8 * (3 + h % 4 * -1) } return { value: b, binLen: 4 * f + c } }; break;
                case "TEXT":
                    d = function(c, b, d) { var f, n, e, h, q, m, p, r, k = 0; if (b = b || [0], d = d || 0, q = d >>> 3, "UTF8" === a)
                            for (r = 3, e = 0; e < c.length; e += 1)
                                for (f = c.charCodeAt(e), n = [], 128 > f ? n.push(f) : 2048 > f ? (n.push(192 | f >>> 6), n.push(128 | 63 & f)) : 55296 > f || 57344 <= f ? n.push(224 | f >>> 12, 128 | f >>> 6 & 63, 128 | 63 & f) : (e += 1, f = 65536 + ((1023 & f) << 10 | 1023 & c.charCodeAt(e)), n.push(240 | f >>> 18, 128 | f >>> 12 & 63, 128 | f >>> 6 & 63, 128 | 63 & f)), h = 0; h < n.length; h += 1) { for (p = k + q, m = p >>> 2; b.length <= m;) b.push(0);
                                    b[m] |= n[h] << 8 * (r + p % 4 * -1), k += 1 } else if ("UTF16BE" === a || "UTF16LE" === a)
                                    for (r = 2, n = "UTF16LE" === a && !0 || "UTF16LE" !== a && !1, e = 0; e < c.length; e += 1) { for (f = c.charCodeAt(e), !0 === n && (h = 255 & f, f = h << 8 | f >>> 8), p = k + q, m = p >>> 2; b.length <= m;) b.push(0);
                                        b[m] |= f << 8 * (r + p % 4 * -1), k += 2 }
                        return { value: b, binLen: 8 * k + d } }; break;
                case "B64":
                    d = function(a, b, c) { var d, k, e, h, q, m, p, f = 0; if (-1 === a.search(/^[a-zA-Z0-9=+\/]+$/)) throw Error("Invalid character in base-64 string"); if (k = a.indexOf("="), a = a.replace(/\=/g, ""), -1 !== k && k < a.length) throw Error("Invalid '=' found in base-64 string"); for (b = b || [0], c = c || 0, m = c >>> 3, k = 0; k < a.length; k += 4) { for (q = a.substr(k, 4), e = h = 0; e < q.length; e += 1) d = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/".indexOf(q[e]), h |= d << 18 - 6 * e; for (e = 0; e < q.length - 1; e += 1) { for (p = f + m, d = p >>> 2; b.length <= d;) b.push(0);
                                b[d] |= (h >>> 16 - 8 * e & 255) << 8 * (3 + p % 4 * -1), f += 1 } } return { value: b, binLen: 8 * f + c } }; break;
                case "BYTES":
                    d = function(a, b, c) { var d, n, k, e, h; for (b = b || [0], c = c || 0, k = c >>> 3, n = 0; n < a.length; n += 1) d = a.charCodeAt(n), h = n + k, e = h >>> 2, b.length <= e && b.push(0), b[e] |= d << 8 * (3 + h % 4 * -1); return { value: b, binLen: 8 * a.length + c } }; break;
                case "ARRAYBUFFER":
                    try { d = new ArrayBuffer(0) } catch (l) { throw Error("ARRAYBUFFER not supported by this environment") } d = function(a, b, c) { var d, n, k, e, h; for (b = b || [0], c = c || 0, n = c >>> 3, h = new Uint8Array(a), d = 0; d < a.byteLength; d += 1) e = d + n, k = e >>> 2, b.length <= k && b.push(0), b[k] |= h[d] << 8 * (3 + e % 4 * -1); return { value: b, binLen: 8 * a.byteLength + c } }; break;
                default:
                    throw Error("format must be HEX, TEXT, B64, BYTES, or ARRAYBUFFER") } return d }

        function r(c, a) { return c >>> a | c << 32 - a }

        function J(c, a, d) { return c & a ^ ~c & d }

        function K(c, a, d) { return c & a ^ c & d ^ a & d }

        function L(c) { return r(c, 2) ^ r(c, 13) ^ r(c, 22) }

        function M(c) { return r(c, 6) ^ r(c, 11) ^ r(c, 25) }

        function N(c) { return r(c, 7) ^ r(c, 18) ^ c >>> 3 }

        function O(c) { return r(c, 17) ^ r(c, 19) ^ c >>> 10 }

        function P(c, a) { var d = (65535 & c) + (65535 & a); return ((c >>> 16) + (a >>> 16) + (d >>> 16) & 65535) << 16 | 65535 & d }

        function Q(c, a, d, l) { var b = (65535 & c) + (65535 & a) + (65535 & d) + (65535 & l); return ((c >>> 16) + (a >>> 16) + (d >>> 16) + (l >>> 16) + (b >>> 16) & 65535) << 16 | 65535 & b }

        function R(c, a, d, l, b) { var g = (65535 & c) + (65535 & a) + (65535 & d) + (65535 & l) + (65535 & b); return ((c >>> 16) + (a >>> 16) + (d >>> 16) + (l >>> 16) + (b >>> 16) + (g >>> 16) & 65535) << 16 | 65535 & g }

        function x(c) { var d, a = []; if (0 !== c.lastIndexOf("SHA-", 0)) throw Error("No SHA variants supported"); switch (a = [3238371032, 914150663, 812702999, 4144912697, 4290775857, 1750603025, 1694076839, 3204075428], d = [1779033703, 3144134277, 1013904242, 2773480762, 1359893119, 2600822924, 528734635, 1541459225], c) {
                case "SHA-224":
                    break;
                case "SHA-256":
                    a = d; break;
                case "SHA-384":
                case "SHA-512":
                    a = [new m, new m, new m, new m, new m, new m, new m, new m]; break;
                default:
                    throw Error("Unknown SHA variant") } return a }

        function A(c, a, d) { var l, b, g, f, n, k, e, h, m, r, p, w, t, x, u, z, A, B, C, D, E, F, G, v = []; if ("SHA-224" !== d && "SHA-256" !== d) throw Error("Unexpected error in SHA-2 implementation"); for (r = 64, w = 1, F = Number, t = P, x = Q, u = R, z = N, A = O, B = L, C = M, E = K, D = J, G = H, d = a[0], l = a[1], b = a[2], g = a[3], f = a[4], n = a[5], k = a[6], e = a[7], p = 0; p < r; p += 1) 16 > p ? (m = p * w, h = c.length <= m ? 0 : c[m], m = c.length <= m + 1 ? 0 : c[m + 1], v[p] = new F(h, m)) : v[p] = x(A(v[p - 2]), v[p - 7], z(v[p - 15]), v[p - 16]), h = u(e, C(f), D(f, n, k), G[p], v[p]), m = t(B(d), E(d, l, b)), e = k, k = n, n = f, f = t(g, h), g = b, b = l, l = d, d = t(h, m); return a[0] = t(d, a[0]), a[1] = t(l, a[1]), a[2] = t(b, a[2]), a[3] = t(g, a[3]), a[4] = t(f, a[4]), a[5] = t(n, a[5]), a[6] = t(k, a[6]), a[7] = t(e, a[7]), a } var H;
        H = [1116352408, 1899447441, 3049323471, 3921009573, 961987163, 1508970993, 2453635748, 2870763221, 3624381080, 310598401, 607225278, 1426881987, 1925078388, 2162078206, 2614888103, 3248222580, 3835390401, 4022224774, 264347078, 604807628, 770255983, 1249150122, 1555081692, 1996064986, 2554220882, 2821834349, 2952996808, 3210313671, 3336571891, 3584528711, 113926993, 338241895, 666307205, 773529912, 1294757372, 1396182291, 1695183700, 1986661051, 2177026350, 2456956037, 2730485921, 2820302411, 3259730800, 3345764771, 3516065817, 3600352804, 4094571909, 275423344, 430227734, 506948616, 659060556, 883997877, 958139571, 1322822218, 1537002063, 1747873779, 1955562222, 2024104815, 2227730452, 2361852424, 2428436474, 2756734187, 3204031479, 3329325298], "function" == typeof define && define.amd ? define(function() { return w }) : "undefined" != typeof exports ? ("undefined" != typeof module && module.exports && (module.exports = w), exports = w) : I.jsSHA = w }(this);